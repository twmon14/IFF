--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	red inv1(init,a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkcm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkcm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close
--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq r(r3) = r .
  eq p(r3) = a2 .

  eq k = k(enemy) .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq r(r3) = r .
  eq p(r3) = a2 .

  eq (k = k(enemy)) = false .
  eq a2 = enemy .
  eq enc(k,r,enemy) \in ciphers(nw(f)) = true .
  red inv2(f,k,r)
    implies inv1(f,a1,a2,a3,k,r)
    implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq r(r3) = r .
  eq p(r3) = a2 .

  eq (k = k(enemy)) = false .
  eq a2 = enemy .
  eq enc(k,r,enemy) \in ciphers(nw(f)) = false .
  red lm1(r3,enc(k,r,enemy),ciphers(nw(f)))
    implies inv1(f,a1,a2,a3,k,r)
    implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq r(r3) = r .
  eq p(r3) = a2 .

  eq (k = k(enemy)) = false .
  eq (a2 = enemy) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq r(r3) = r .
  eq (p(r3) = a2) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq k(r3) = k .
  eq (r(r3) = r) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq r2 = a3 .
  eq (k(r3) = k) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq r1 = a2 .
  eq (r2 = a3) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq a1 = enemy .
  eq (r1 = a2) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = true .
  eq (a1 = enemy) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Cipher .
  eq r3 \in ciphers(nw(f)) = false .
  red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm1(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	eq a2 = enemy .
	eq k(enemy) = k .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm2(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	eq a2 = enemy .
	eq (k(enemy) = k) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm2(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	eq (a2 = enemy) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm2(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(fkrm2(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in ur(f)) = true .
	red inv1(f,a1,a2,a3,k,r) implies inv1(sdcm(f,r1,r2,r3),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in ur(f)) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(sdcm(f,r1,r2,r3),a1,a2,a3,k,r) .
close


open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq a3 = src(r2) .
  eq k = k(dst(r2)) .
  eq r = r(r2) .
  eq a2 = dst(r2) .

  eq dst(r2) = enemy .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq a3 = src(r2) .
  eq k = k(dst(r2)) .
  eq r = r(r2) .
  eq a2 = dst(r2) .

  eq (dst(r2) = enemy) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq a3 = src(r2) .
  eq k = k(dst(r2)) .
  eq r = r(r2) .
  eq (a2 = dst(r2)) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq a3 = src(r2) .
  eq k = k(dst(r2)) .
  eq (r = r(r2)) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq a3 = src(r2) .
  eq (k = k(dst(r2))) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq a1 = dst(r2) .
  eq (a3 = src(r2)) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq r1 = dst(r2) .

  eq (a1 = dst(r2)) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = true .
	eq (r1 = dst(r2)) = false .

	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = true .
	eq (r2 \in nw(f)) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

--> true
open IFF .
	:id(iff)
	op a1 : -> Agent .
	op a2 : -> Agent .
	op a3 : -> Agent .
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Msg .
	eq cm?(r2) = false .
	red inv1(f,a1,a2,a3,k,r) implies inv1(sdrm(f,r1,r2),a1,a2,a3,k,r) .
close

open IFF .
  :proof(iff)
close
