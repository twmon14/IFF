--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	red inv2(init,k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	red inv2(f,k,r) implies inv2(fkcm1(f,r1,r2,r3),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = false .
	red inv2(f,k,r) implies inv2(fkcm1(f,r1,r2,r3),k,r) .
close

--> 3) fkrm1(f,q1,q2,c)
open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq r(c) = r .
  eq p(c) = enemy .
  eq c \in ciphers(nw(f)) = true .
  red lm1(c,enc(k,r,enemy),ciphers(nw(f)))
    implies inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq r(c) = r .
  eq p(c) = enemy .
  eq c \in ciphers(nw(f)) = false .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq r(c) = r .
  eq (p(c) = enemy) = false .
  eq c \in ciphers(nw(f)) = true .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq r(c) = r .
  eq (p(c) = enemy) = false .
  eq c \in ciphers(nw(f)) = false .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq (r(c) = r) = false .
  eq c \in ciphers(nw(f)) = true .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq k(c) = k .
  eq (r(c) = r) = false .
  eq c \in ciphers(nw(f)) = false .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq (k(c) = k) = false .
  eq c \in ciphers(nw(f)) = true .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

open IFF .
	:id(iff)
  ops q1 q2 : -> Agent .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  op c : -> Cipher .
  eq (k(c) = k) = false .
  eq c \in ciphers(nw(f)) = false .
  red inv2(f,k,r) implies inv2(fkrm1(f,q1,q2,c),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	eq k(enemy) = k .
	red inv2(f,k,r) implies inv2(fkrm2(f,r1,r2,r3),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = true .
	eq (k(enemy) = k) = false .
	red inv2(f,k,r) implies inv2(fkrm2(f,r1,r2,r3),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in rands(nw(f))) = false .
	red inv2(f,k,r) implies inv2(fkrm2(f,r1,r2,r3),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in ur(f)) = true .
	red inv2(f,k,r) implies inv2(sdcm(f,r1,r2,r3),k,r) .
close

--> true
open IFF .
	:id(iff)
	op f : -> Field .
	op k : -> Key .
	op r : -> Rand .
	op r1 : -> Agent .
	op r2 : -> Agent .
	op r3 : -> Rand .
	eq (r3 \in ur(f)) = false .
	red inv2(f,k,r) implies inv2(sdcm(f,r1,r2,r3),k,r) .
close

--> 2) sdrm(f,q1,m1)
open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = true .
  eq q1 = dst(m1) .
  eq k = k(dst(m1)) .
  eq r = r(m1) .
  eq dst(m1) = enemy .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = true .
  eq q1 = dst(m1) .
  eq k = k(dst(m1)) .
  eq r = r(m1) .
  eq (dst(m1) = enemy) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = true .
  eq q1 = dst(m1) .
  eq k = k(dst(m1)) .
  eq (r = r(m1)) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = true .
  eq q1 = dst(m1) .
  eq (k = k(dst(m1))) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = true .
  eq (q1 = dst(m1)) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = true .
  eq m1 \in nw(f) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
	:id(iff)
  op q1 : -> Agent .
  op m1 : -> Msg .
  op nw1 : -> Network .
  op f : -> Field .
  op k : -> Key .
  op r : -> Rand .
  eq cm?(m1) = false .
  red inv2(f,k,r) implies inv2(sdrm(f,q1,m1),k,r) .
close

open IFF .
  :proof(iff)
close
